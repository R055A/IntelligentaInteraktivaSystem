#!/usr/bin/env python2.7

from emotion_response import EmotionResponse


class EmotionDisgust(EmotionResponse):
    """
    Subclass of EmotionResponse for generating a disgust expression on robot
    Author: Adam Ross & Alexis Remmers
    Date: 08/05/2019
    """

    def __init__(self, address, port):
        """
        Class constructor
        :param address: the IP address for connecting to the NAO Robot software
        :param port: the port number for connecting to the NAO Robot software
        """
        EmotionResponse.__init__(self, address, port)

    def generate_emotion(self):
        
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.36, 0.68, 0.84, 1.04, 1.2, 1.72, 1.92, 2.08, 2.2, 2.36, 2.52, 2.64, 2.8, 2.96, 3.16, 3.28, 3.44, 3.6, 5.04])
        keys.append([[0.230383, [3, -0.12, 0], [3, 0.106667, 0]], [0.230383, [3, -0.106667, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.0666667, 0]], [0.307178, [3, -0.0666667, 0], [3, 0.0533333, 0]], [-0.148353, [3, -0.0533333, 0], [3, 0.173333, 0]], [0.307178, [3, -0.173333, 0], [3, 0.0666667, 0]], [0.307178, [3, -0.0666667, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.04, 0]], [0.307178, [3, -0.04, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.04, 0]], [0.307178, [3, -0.04, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.0666667, 0]], [0.307178, [3, -0.0666667, 0], [3, 0.04, 0]], [0.307178, [3, -0.04, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.307178, [3, -0.0533333, 0], [3, 0.48, 0]], [0.000321877, [3, -0.48, 0], [3, 0, 0]]])

        names.append("HeadYaw")
        times.append([0.36, 0.68, 0.84, 1.04, 1.2, 1.72, 1.92, 2.08, 2.2, 2.36, 2.52, 2.64, 2.8, 2.96, 3.16, 3.28, 3.44, 3.6, 5.04])
        keys.append([[0.792379, [3, -0.12, 0], [3, 0.106667, 0]], [0.792379, [3, -0.106667, 0], [3, 0.0533333, 0]], [-0.663225, [3, -0.0533333, 0], [3, 0.0666667, 0]], [-0.663225, [3, -0.0666667, 0], [3, 0.0533333, 0]], [1.05069, [3, -0.0533333, 0], [3, 0.173333, 0]], [0.261799, [3, -0.173333, 0.315969], [3, 0.0666667, -0.121527]], [-0.261799, [3, -0.0666667, 0], [3, 0.0533333, 0]], [-0.261799, [3, -0.0533333, 0], [3, 0.04, 0]], [0.261799, [3, -0.04, 0], [3, 0.0533333, 0]], [0.261799, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.261799, [3, -0.0533333, 0], [3, 0.04, 0]], [-0.261799, [3, -0.04, 0], [3, 0.0533333, 0]], [0.261799, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.261799, [3, -0.0533333, 0], [3, 0.0666667, 0]], [-0.261799, [3, -0.0666667, 0], [3, 0.04, 0]], [-0.261799, [3, -0.04, 0], [3, 0.0533333, 0]], [0.261799, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.261799, [3, -0.0533333, 0], [3, 0.48, 0]], [0.00110706, [3, -0.48, 0], [3, 0, 0]]])

        names.append("LAnklePitch")
        times.append([5.04])
        keys.append([[-0.341283, [3, -1.68, 0], [3, 0, 0]]])

        names.append("LAnkleRoll")
        times.append([5.04])
        keys.append([[0, [3, -1.68, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.48, 1.32, 1.64, 2.16, 3.56, 5.04])
        keys.append([[-0.415214, [3, -0.16, 0], [3, 0.28, 0]], [-0.468467, [3, -0.28, 0.0286896], [3, 0.106667, -0.0109294]], [-0.534071, [3, -0.106667, 0], [3, 0.173333, 0]], [-0.534071, [3, -0.173333, 0], [3, 0.466667, 0]], [-0.534071, [3, -0.466667, 0], [3, 0.493333, 0]], [-1.00383, [3, -0.493333, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.48, 1.32, 1.64, 2.16, 2.44, 2.92, 3.56, 5.04])
        keys.append([[-1.19474, [3, -0.16, 0], [3, 0.28, 0]], [-1.09885, [3, -0.28, 0], [3, 0.106667, 0]], [-1.57952, [3, -0.106667, 0], [3, 0.173333, 0]], [-1.57952, [3, -0.173333, 0], [3, 0.0933333, 0]], [-2.08567, [3, -0.0933333, 0], [3, 0.16, 0]], [-2.08567, [3, -0.16, 0], [3, 0.213333, 0]], [-1.57952, [3, -0.213333, -0.0703236], [3, 0.493333, 0.162623]], [-1.38683, [3, -0.493333, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([0.48, 1.32, 1.64, 2.16, 3.56, 5.04])
        keys.append([[0.303494, [3, -0.16, 0], [3, 0.28, 0]], [0.387915, [3, -0.28, -0.084421], [3, 0.106667, 0.0321604]], [0.996717, [3, -0.106667, 0], [3, 0.173333, 0]], [0.996717, [3, -0.173333, 0], [3, 0.466667, 0]], [0.996717, [3, -0.466667, 0], [3, 0.493333, 0]], [0.251043, [3, -0.493333, 0], [3, 0, 0]]])

        names.append("LHipPitch")
        times.append([5.04])
        keys.append([[-0.445513, [3, -1.68, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([5.04])
        keys.append([[0, [3, -1.68, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([5.04])
        keys.append([[0, [3, -1.68, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([5.04])
        keys.append([[0.693018, [3, -1.68, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.48, 1.32, 1.64, 2.16, 3.56, 5.04])
        keys.append([[1.46673, [3, -0.16, 0], [3, 0.28, 0]], [1.25584, [3, -0.28, 0.210892], [3, 0.106667, -0.0803397]], [0.174533, [3, -0.106667, 0], [3, 0.173333, 0]], [0.174533, [3, -0.173333, 0], [3, 0.466667, 0]], [0.174533, [3, -0.466667, 0], [3, 0.493333, 0]], [1.39961, [3, -0.493333, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.48, 1.32, 1.64, 2.16, 3.56, 5.04])
        keys.append([[0.1843, [3, -0.16, 0], [3, 0.28, 0]], [0.194899, [3, -0.28, 0], [3, 0.106667, 0]], [-0.158825, [3, -0.106667, 0], [3, 0.173333, 0]], [-0.158825, [3, -0.173333, 0], [3, 0.466667, 0]], [-0.158825, [3, -0.466667, 0], [3, 0.493333, 0]], [0.296865, [3, -0.493333, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([0.48, 1.32, 1.64, 2.16, 3.56, 5.04])
        keys.append([[0.102785, [3, -0.16, 0], [3, 0.28, 0]], [0.319538, [3, -0.28, -0.216753], [3, 0.106667, 0.0825726]], [1.82387, [3, -0.106667, 0], [3, 0.173333, 0]], [1.82387, [3, -0.173333, 0], [3, 0.466667, 0]], [1.82387, [3, -0.466667, 0], [3, 0.493333, 0]], [0.00246784, [3, -0.493333, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([5.04])
        keys.append([[-0.341283, [3, -1.68, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([5.04])
        keys.append([[0, [3, -1.68, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.48, 1, 1.72, 3.32, 5.04])
        keys.append([[0.41158, [3, -0.16, 0], [3, 0.173333, 0]], [1.51666, [3, -0.173333, 0], [3, 0.24, 0]], [1.27409, [3, -0.24, 0.0518782], [3, 0.533333, -0.115285]], [1.01518, [3, -0.533333, 0], [3, 0.573333, 0]], [1.01811, [3, -0.573333, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.48, 1, 3.32, 5.04])
        keys.append([[1.1888, [3, -0.16, 0], [3, 0.173333, 0]], [0.564982, [3, -0.173333, 0], [3, 0.773333, 0]], [1.38645, [3, -0.773333, -0.00137005], [3, 0.573333, 0.00101573]], [1.38746, [3, -0.573333, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([0.48, 1, 3.32, 5.04])
        keys.append([[0.303603, [3, -0.16, 0], [3, 0.173333, 0]], [1, [3, -0.173333, 0], [3, 0.773333, 0]], [0.259842, [3, -0.773333, 0.0118617], [3, 0.573333, -0.00879401]], [0.251048, [3, -0.573333, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([5.04])
        keys.append([[-0.445513, [3, -1.68, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([5.04])
        keys.append([[0, [3, -1.68, 0], [3, 0, 0]]])

        names.append("RHipYawPitch")
        times.append([5.04])
        keys.append([[0, [3, -1.68, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([5.04])
        keys.append([[0.693018, [3, -1.68, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.48, 1, 3.32, 5.04])
        keys.append([[1.46984, [3, -0.16, 0], [3, 0.173333, 0]], [-0.102217, [3, -0.173333, 0], [3, 0.773333, 0]], [1.39978, [3, -0.773333, 0], [3, 0.573333, 0]], [1.39961, [3, -0.573333, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.48, 1, 3.32, 5.04])
        keys.append([[-0.178146, [3, -0.16, 0], [3, 0.173333, 0]], [0.0541691, [3, -0.173333, 0], [3, 0.773333, 0]], [-0.293807, [3, -0.773333, 0.00504026], [3, 0.573333, -0.00373675]], [-0.297544, [3, -0.573333, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([0.48, 1, 3.32, 5.04])
        keys.append([[0.0974852, [3, -0.16, 0], [3, 0.173333, 0]], [-1.41577, [3, -0.173333, 0], [3, 0.773333, 0]], [-0.00403412, [3, -0.773333, 0], [3, 0.573333, 0]], [-0.00994626, [3, -0.573333, 0], [3, 0, 0]]])


        self.sessions[self.POSTURE].goToPosture("StandInit", 0.5)
        self.sessions[self.MOTION].angleInterpolationBezier(names, times, keys)
